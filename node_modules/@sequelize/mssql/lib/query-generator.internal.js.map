{
  "version": 3,
  "sources": ["../src/query-generator.internal.ts"],
  "sourcesContent": ["import { AbstractQueryGeneratorInternal } from '@sequelize/core/_non-semver-use-at-your-own-risk_/abstract-dialect/query-generator-internal.js';\nimport type { AddLimitOffsetOptions } from '@sequelize/core/_non-semver-use-at-your-own-risk_/abstract-dialect/query-generator.internal-types.js';\nimport type { MsSqlDialect } from './dialect.js';\n\nconst TECHNICAL_DATABASE_NAMES = Object.freeze(['master', 'model', 'msdb', 'tempdb']);\n\nconst TECHNICAL_SCHEMA_NAMES = Object.freeze([\n  'db_accessadmin',\n  'db_backupoperator',\n  'db_datareader',\n  'db_datawriter',\n  'db_ddladmin',\n  'db_denydatareader',\n  'db_denydatawriter',\n  'db_owner',\n  'db_securityadmin',\n  'INFORMATION_SCHEMA',\n  'sys',\n]);\n\nexport class MsSqlQueryGeneratorInternal<\n  Dialect extends MsSqlDialect = MsSqlDialect,\n> extends AbstractQueryGeneratorInternal<Dialect> {\n  getTechnicalDatabaseNames() {\n    return TECHNICAL_DATABASE_NAMES;\n  }\n\n  getTechnicalSchemaNames() {\n    return TECHNICAL_SCHEMA_NAMES;\n  }\n\n  addLimitAndOffset(options: AddLimitOffsetOptions) {\n    let fragment = '';\n    if (options.offset || options.limit) {\n      fragment += ` OFFSET ${this.queryGenerator.escape(options.offset || 0, options)} ROWS`;\n    }\n\n    if (options.limit != null) {\n      if (options.limit === 0) {\n        throw new Error(`LIMIT 0 is not supported by ${this.dialect.name} dialect.`);\n      }\n\n      fragment += ` FETCH NEXT ${this.queryGenerator.escape(options.limit, options)} ROWS ONLY`;\n    }\n\n    return fragment;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA+C;AAI/C,MAAM,2BAA2B,OAAO,OAAO,CAAC,UAAU,SAAS,QAAQ,QAAQ,CAAC;AAEpF,MAAM,yBAAyB,OAAO,OAAO;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,MAAM,oCAEH,+DAAwC;AAAA,EAChD,4BAA4B;AAC1B,WAAO;AAAA,EACT;AAAA,EAEA,0BAA0B;AACxB,WAAO;AAAA,EACT;AAAA,EAEA,kBAAkB,SAAgC;AAChD,QAAI,WAAW;AACf,QAAI,QAAQ,UAAU,QAAQ,OAAO;AACnC,kBAAY,WAAW,KAAK,eAAe,OAAO,QAAQ,UAAU,GAAG,OAAO;AAAA,IAChF;AAEA,QAAI,QAAQ,SAAS,MAAM;AACzB,UAAI,QAAQ,UAAU,GAAG;AACvB,cAAM,IAAI,MAAM,+BAA+B,KAAK,QAAQ,eAAe;AAAA,MAC7E;AAEA,kBAAY,eAAe,KAAK,eAAe,OAAO,QAAQ,OAAO,OAAO;AAAA,IAC9E;AAEA,WAAO;AAAA,EACT;AACF;",
  "names": []
}

import type { AbstractConnection, ConnectionOptions } from '@sequelize/core';
import { AbstractConnectionManager } from '@sequelize/core';
import * as Tedious from 'tedious';
import { AsyncQueue } from './_internal/async-queue.js';
import type { InlinedTediousOptions } from './_internal/connection-options.js';
import { ASYNC_QUEUE } from './_internal/symbols.js';
import type { MsSqlDialect } from './dialect.js';
export interface MsSqlConnection extends AbstractConnection, Tedious.Connection {
    [ASYNC_QUEUE]: AsyncQueue;
}
export type MsSqlConnectionOptions = Partial<Omit<Tedious.ConnectionConfiguration, 'options'>> & InlinedTediousOptions;
export type TediousModule = typeof Tedious;
export declare class MsSqlConnectionManager extends AbstractConnectionManager<MsSqlDialect, MsSqlConnection> {
    #private;
    constructor(dialect: MsSqlDialect);
    connect(connectionOptions: ConnectionOptions<MsSqlDialect>): Promise<MsSqlConnection>;
    disconnect(connection: MsSqlConnection): Promise<void>;
    validate(connection: MsSqlConnection): boolean;
}

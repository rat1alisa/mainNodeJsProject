{
  "version": 3,
  "sources": ["../../src/_internal/connection-options.ts"],
  "sourcesContent": ["import { getSynchronizedTypeKeys, type NonUndefined, type PickByType } from '@sequelize/utils';\nimport type * as Tedious from 'tedious';\nimport type { MsSqlConnectionOptions } from '../connection-manager.js';\n\nexport type InlinedTediousOptions = Omit<\n  NonUndefined<Tedious.ConnectionConfiguration['options']>,\n  // Default nullability of columns is not needed as Sequelize explicitly sets it,\n  // and this option will be confusing with Sequelize's option about default nullability.\n  | 'enableAnsiNullDefault'\n  | 'camelCaseColumns'\n  | 'columnNameReplacer'\n  | 'enableQuotedIdentifier'\n  | 'useUTC'\n  | 'useColumnNames'\n  // Conflicts with our own isolationLevel option, which does the same thing\n  | 'isolationLevel'\n>;\n\nexport const INLINED_OPTION_OBJ = {\n  abortTransactionOnError: undefined,\n  appName: undefined,\n  cancelTimeout: undefined,\n  connectTimeout: undefined,\n  connectionIsolationLevel: undefined,\n  connectionRetryInterval: undefined,\n  connector: undefined,\n  cryptoCredentialsDetails: undefined,\n  database: undefined,\n  dateFormat: undefined,\n  datefirst: undefined,\n  debug: undefined,\n  enableAnsiNull: undefined,\n  enableAnsiPadding: undefined,\n  enableAnsiWarnings: undefined,\n  enableArithAbort: undefined,\n  enableConcatNullYieldsNull: undefined,\n  enableCursorCloseOnCommit: undefined,\n  enableImplicitTransactions: undefined,\n  enableNumericRoundabort: undefined,\n  encrypt: undefined,\n  fallbackToDefaultDb: undefined,\n  instanceName: undefined,\n  language: undefined,\n  localAddress: undefined,\n  lowerCaseGuids: undefined,\n  maxRetriesOnTransientErrors: undefined,\n  multiSubnetFailover: undefined,\n  packetSize: undefined,\n  port: undefined,\n  readOnlyIntent: undefined,\n  requestTimeout: undefined,\n  rowCollectionOnDone: undefined,\n  rowCollectionOnRequestCompletion: undefined,\n  serverName: undefined,\n  tdsVersion: undefined,\n  textsize: undefined,\n  trustServerCertificate: undefined,\n  workstationId: undefined,\n} as const satisfies Record<keyof InlinedTediousOptions, undefined>;\n\nexport const INLINED_OPTION_NAMES =\n  getSynchronizedTypeKeys<InlinedTediousOptions>(INLINED_OPTION_OBJ);\n\nexport const CONNECTION_OPTION_NAMES = getSynchronizedTypeKeys<MsSqlConnectionOptions>({\n  ...INLINED_OPTION_OBJ,\n  authentication: undefined,\n  server: undefined,\n});\n\ntype StringConnectionOptions = PickByType<MsSqlConnectionOptions, string>;\n\nexport const STRING_CONNECTION_OPTION_NAMES = getSynchronizedTypeKeys<StringConnectionOptions>({\n  appName: undefined,\n  database: undefined,\n  dateFormat: undefined,\n  encrypt: undefined,\n  instanceName: undefined,\n  language: undefined,\n  localAddress: undefined,\n  server: undefined,\n  serverName: undefined,\n  tdsVersion: undefined,\n  workstationId: undefined,\n});\n\ntype BooleanConnectionOptions = PickByType<MsSqlConnectionOptions, boolean>;\n\nexport const BOOLEAN_CONNECTION_OPTION_NAMES = getSynchronizedTypeKeys<BooleanConnectionOptions>({\n  abortTransactionOnError: undefined,\n  enableAnsiNull: undefined,\n  enableAnsiPadding: undefined,\n  enableAnsiWarnings: undefined,\n  enableArithAbort: undefined,\n  enableConcatNullYieldsNull: undefined,\n  enableCursorCloseOnCommit: undefined,\n  enableImplicitTransactions: undefined,\n  enableNumericRoundabort: undefined,\n  encrypt: undefined,\n  fallbackToDefaultDb: undefined,\n  lowerCaseGuids: undefined,\n  multiSubnetFailover: undefined,\n  readOnlyIntent: undefined,\n  rowCollectionOnDone: undefined,\n  rowCollectionOnRequestCompletion: undefined,\n  trustServerCertificate: undefined,\n});\n\ntype NumberConnectionOptions = PickByType<MsSqlConnectionOptions, number>;\n\nexport const NUMBER_CONNECTION_OPTION_NAMES = getSynchronizedTypeKeys<NumberConnectionOptions>({\n  cancelTimeout: undefined,\n  connectionRetryInterval: undefined,\n  connectTimeout: undefined,\n  connectionIsolationLevel: undefined,\n  datefirst: undefined,\n  maxRetriesOnTransientErrors: undefined,\n  packetSize: undefined,\n  port: undefined,\n  requestTimeout: undefined,\n  textsize: undefined,\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4E;AAkBrE,MAAM,qBAAqB;AAAA,EAChC,yBAAyB;AAAA,EACzB,SAAS;AAAA,EACT,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,0BAA0B;AAAA,EAC1B,yBAAyB;AAAA,EACzB,WAAW;AAAA,EACX,0BAA0B;AAAA,EAC1B,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,OAAO;AAAA,EACP,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,kBAAkB;AAAA,EAClB,4BAA4B;AAAA,EAC5B,2BAA2B;AAAA,EAC3B,4BAA4B;AAAA,EAC5B,yBAAyB;AAAA,EACzB,SAAS;AAAA,EACT,qBAAqB;AAAA,EACrB,cAAc;AAAA,EACd,UAAU;AAAA,EACV,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,6BAA6B;AAAA,EAC7B,qBAAqB;AAAA,EACrB,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,qBAAqB;AAAA,EACrB,kCAAkC;AAAA,EAClC,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,wBAAwB;AAAA,EACxB,eAAe;AACjB;AAEO,MAAM,2BACX,sCAA+C,kBAAkB;AAE5D,MAAM,8BAA0B,sCAAgD;AAAA,EACrF,GAAG;AAAA,EACH,gBAAgB;AAAA,EAChB,QAAQ;AACV,CAAC;AAIM,MAAM,qCAAiC,sCAAiD;AAAA,EAC7F,SAAS;AAAA,EACT,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,cAAc;AAAA,EACd,UAAU;AAAA,EACV,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,eAAe;AACjB,CAAC;AAIM,MAAM,sCAAkC,sCAAkD;AAAA,EAC/F,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,kBAAkB;AAAA,EAClB,4BAA4B;AAAA,EAC5B,2BAA2B;AAAA,EAC3B,4BAA4B;AAAA,EAC5B,yBAAyB;AAAA,EACzB,SAAS;AAAA,EACT,qBAAqB;AAAA,EACrB,gBAAgB;AAAA,EAChB,qBAAqB;AAAA,EACrB,gBAAgB;AAAA,EAChB,qBAAqB;AAAA,EACrB,kCAAkC;AAAA,EAClC,wBAAwB;AAC1B,CAAC;AAIM,MAAM,qCAAiC,sCAAiD;AAAA,EAC7F,eAAe;AAAA,EACf,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,0BAA0B;AAAA,EAC1B,WAAW;AAAA,EACX,6BAA6B;AAAA,EAC7B,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,gBAAgB;AAAA,EAChB,UAAU;AACZ,CAAC;",
  "names": []
}
